[{"/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/index.js":"1","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/App.js":"2","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/Routes.js":"3","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/core/home.js":"4","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/user/Signin.js":"5","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/user/Signup.js":"6","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/user/Dashboard.js":"7","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/auth/helper/index.js":"8","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/Backend.js":"9","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/auth/helper/PrivateRoutes.js":"10"},{"size":178,"mtime":1610721128291,"results":"11","hashOfConfig":"12"},{"size":528,"mtime":1609502983361,"results":"13","hashOfConfig":"12"},{"size":814,"mtime":1612548683130,"results":"14","hashOfConfig":"12"},{"size":813,"mtime":1610817332525,"results":"15","hashOfConfig":"12"},{"size":3880,"mtime":1612550523162,"results":"16","hashOfConfig":"12"},{"size":4628,"mtime":1612443587827,"results":"17","hashOfConfig":"12"},{"size":953,"mtime":1612683130612,"results":"18","hashOfConfig":"12"},{"size":1944,"mtime":1612682021455,"results":"19","hashOfConfig":"12"},{"size":51,"mtime":1610720031868,"results":"20","hashOfConfig":"12"},{"size":551,"mtime":1612548687385,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ypjp7o",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/index.js",[],["47","48"],"/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/App.js",[],["49","50"],"/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/Routes.js",[],"/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/core/home.js",[],"/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/user/Signin.js",["51","52","53","54","55"],"import React,{useState} from 'react'\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { signin, authenticate, isAuthenticated } from '../auth/helper';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n\nfunction Signin() {\n\n    const history = useHistory();\n    const signupPush = () => history.push('/signup')\n    const dashboardPush = () => history.push('/dashboard')\n\n    const [values, setValues] = useState({\n        username:\"\",\n        password:\"\",\n        loading:false,\n        error:\"\",\n        sucess:false,\n        didRedirect:false,\n    })\n    const {username, password, loading, error, sucess, didRedirect} = values;\n\n    const handleChange = name => event =>{\n        setValues({...values, error:false, [name]:event.target.value})\n    }\n\n    const errorMessage = () =>{\n        if (values.error === true){\n            return(\n                <Alert severity=\"error\" onClose={() => {}}>\n                    <AlertTitle>Error</AlertTitle>\n                    Something Went Wrong — <strong>Check your username and password</strong>\n                </Alert>\n            )\n        }\n    }\n\n\n    const successMessage = () =>{\n        if(values.sucess === true){\n            return (\n                <Alert severity=\"success\" onClose={() => {}}>\n                    <AlertTitle>Success</AlertTitle>\n                    <strong> <a >Login Successfull</a> </strong>\n                </Alert>\n            )\n        }\n    }\n\n    const onLoginSubmit = (event) => {\n        event.preventDefault();\n        setValues({...values, error:false, loading:true})\n        signin({username, password})\n        .then(\n            data => {\n                setValues({\n                    ...values,\n                    username:\"\",\n                    password:\"\"\n                })\n                console.log(\"Data\", data);\n                if(data.token){\n                    authenticate(data, ()=>{\n                        console.log(\"Token Added\");\n                        setValues({\n                            ...values,\n                            didRedirect:true\n                        })\n                    })\n                } else{\n                    setValues({\n                        ...values,\n                        username:\"\",\n                        password:\"\",\n                        error:true,\n                        loading:false\n                    })\n                }\n            }\n        )\n        .catch((e) => console.log(e))\n    }\n    const redirect = () =>{\n        if(didRedirect){\n            dashboardPush();\n        }\n    }\n\n    const signinForm = () =>{\n        return(\n            <div className=\"signinForm\">\n                <div className=\"signin\">\n                    <form action=\"\">\n                        <h2>Sign In</h2> \n                        <label htmlFor=\"\">Username</label>\n                        <input type=\"text\" placeholder=\"Enter User Name\" value={username} \n                        onChange={handleChange(\"username\")}\n                        />\n\n                        <label htmlFor=\"\">password</label>\n                        <input type=\"password\" placeholder=\"Enter Password\"\n                        value={password} onChange={handleChange(\"password\")}\n                        />\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={onLoginSubmit} >Login</Button>\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={signupPush} >Sign Up</Button>\n                        <Button color=\"primary\" >Forgot Password ?</Button>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n    return(\n        <div>\n            {successMessage()}            \n            {errorMessage()}\n            {signinForm()}\n            {redirect()}\n        </div>\n    )\n}\n\nexport default Signin\n","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/user/Signup.js",["56","57","58"],"import React, {useState} from 'react'\nimport {Button} from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport {signup} from '../auth/helper'\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n\nfunction Signup() {\n\n    const history = useHistory();\n    const loginPush = () => history.push('/signin')\n    \n    const [values, setValues] = useState({\n        firstName:\"\",\n        lastName:\"\",\n        email:\"\",\n        username:\"\",\n        password:\"\",\n        error:\"\",\n        sucess:false,\n    })\n\n    const {firstName, lastName, email, username, password, error, sucess} = values;\n\n    const handleChange = name => event =>{\n        setValues({...values, error:false, [name]:event.target.value})\n    }\n\n    const onSubmit = (event) => {\n\n        event.preventDefault();\n            setValues({...values, error:false})\n            signup({firstName, lastName, email, username, password})\n            .then((data) =>{\n                console.log(\"Data\", data);\n                console.log(\"Error is : \", data['email'])\n                if(data.email === email){\n                    setValues({\n                        ...values,\n                        firstName:\"\",\n                        lastName:\"\",\n                        email:\"\",\n                        username:\"\",\n                        password:\"\",\n                        error:\"\",\n                        sucess:true\n                    })\n                }\n                else{\n                    setValues({\n                        ...values,\n                        error:true,\n                        success:false\n                    })\n                    console.log(\"In the else part and error is : \", error)\n                }\n            })\n            .catch((e) => console.log(e))\n    }\n\n    const errorMessage = () =>{\n        if (values.error === true){\n            return(\n                <Alert severity=\"error\" onClose={() => {}}>\n                    <AlertTitle>Error</AlertTitle>\n                    Something Went Wrong please try again with different — <strong>Email and Username!</strong>\n                </Alert>\n            )\n        }\n    }\n\n\n    const successMessage = () =>{\n        if(values.sucess === true){\n            return (\n                <Alert severity=\"success\" onClose={() => {}}>\n                    <AlertTitle>Success</AlertTitle>\n                    Signup completed. Please <strong> <a onClick={loginPush} >Login Here.</a> </strong>\n                </Alert>\n            )\n        }\n    }\n\n    const signupForm = () => {\n        return (\n            <div>\n                <div className=\"signup\">\n                    <div className=\"signupForm\">\n                        <h2>Sign Up</h2>\n                        <form action=\"\">\n                            <label htmlFor=\"\" className=\"text-light\">First Name</label>\n                            <input required type=\"text\" placeholder=\"Enter First Name\" \n                            onChange={handleChange(\"firstName\")}\n                            value={firstName} required />\n    \n                            <label htmlFor=\"\">Last Name</label>\n                            <input type=\"text\" placeholder=\"Enter Last Name\"\n                            onChange={handleChange(\"lastName\")} \n                            value={lastName} />\n    \n                            <label htmlFor=\"\">Email</label>\n                            <input type=\"text\" placeholder=\"Enter your email\" \n                            onChange={handleChange(\"email\")} required\n                            value={email} />\n    \n                            <label htmlFor=\"\">Username</label>\n                            <input type=\"text\" placeholder=\"username\" \n                            onChange={handleChange(\"username\")} required\n                            value={username} />\n    \n                            <label htmlFor=\"\">Password</label>\n                            <input type=\"password\" placeholder=\"Enter Password\" \n                            onChange={handleChange(\"password\")} required\n                            value={password} />\n    \n                            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>Sign up</Button>\n                            <Button color=\"primary\" onClick={loginPush} >Login now ?</Button>\n    \n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"\">\n            {successMessage()}\n            {errorMessage()}\n            {signupForm()}\n        </div>\n            \n    )\n}\n\nexport default Signup\n","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/user/Dashboard.js",["59","60"],"/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/auth/helper/index.js",["61"],"import {API} from \"../../Backend\"\n\nconst mailOnSignup = () =>{\n    return \n}\n\n\nexport const signup = user => {\n    return fetch(`${API}user/`, {\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify(user)\n    })\n    .then((response) =>{\n        return response.json();\n    })\n    .catch(err => console.log(err))\n}\n\nexport const signin = user =>{\n    const formData = new FormData()\n\n    for (const name in user ){\n        console.log(user[name]);\n        formData.append(name, user[name])\n    }\n\n    // const {email, password} = user;\n    // const formData = new FormData()\n    // formData.append('email', email)\n    // formData.append('password', password)\n\n    for(var key of formData.keys()){\n        console.log(\"MyKey : \", key);\n    }\n\n    return fetch(`${API}user/login/`,{\n        method:\"POST\",\n        body: formData\n    })\n\n    .then((response) =>{\n        console.log(\"SUCESS\", response)\n        return response.json()\n    })\n}\n\nexport const authenticate = (data, next)  =>{\n    if(typeof window !== undefined){\n        localStorage.setItem(\"jwt\", JSON.stringify(data))\n        next();\n    }\n}\n\nexport const isAuthenticated = () =>{\n    if(typeof window === undefined){\n        return false\n    }\n\n    if(localStorage.getItem(\"jwt\")){\n        return JSON.parse(localStorage.getItem(\"jwt\"))\n        \n        //TODO: Compare JWT with database json token\n        \n    } else{\n        return false; \n    }\n}\n\nexport const signout = next => {\n    const userId = isAuthenticated() && isAuthenticated().user.id\n\n    if(typeof window !== undefined){\n        localStorage.removeItem(\"jwt\")\n\n        return fetch(`${API}user/logout/${userId}/`, {\n            method:\"GET\"\n        })\n        .then(response => {\n            console.log(\"Signout Success\")\n            next();\n        })\n        .catch(err => console.log(err))\n    }\n}","/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/Backend.js",[],"/home/pradhyum/Documents/JobApplicationTracker/FrontEnd/job-app-tracker/src/auth/helper/PrivateRoutes.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":32,"nodeType":"70","messageId":"71","endLine":4,"endColumn":47},{"ruleId":"68","severity":1,"message":"72","line":22,"column":32,"nodeType":"70","messageId":"71","endLine":22,"endColumn":39},{"ruleId":"68","severity":1,"message":"73","line":22,"column":41,"nodeType":"70","messageId":"71","endLine":22,"endColumn":46},{"ruleId":"68","severity":1,"message":"74","line":22,"column":48,"nodeType":"70","messageId":"71","endLine":22,"endColumn":54},{"ruleId":"75","severity":1,"message":"76","line":45,"column":30,"nodeType":"77","endLine":45,"endColumn":34},{"ruleId":"68","severity":1,"message":"74","line":23,"column":67,"nodeType":"70","messageId":"71","endLine":23,"endColumn":73},{"ruleId":"75","severity":1,"message":"76","line":78,"column":55,"nodeType":"77","endLine":78,"endColumn":79},{"ruleId":"78","severity":1,"message":"79","line":94,"column":47,"nodeType":"80","endLine":94,"endColumn":55},{"ruleId":"68","severity":1,"message":"81","line":2,"column":26,"nodeType":"70","messageId":"71","endLine":2,"endColumn":36},{"ruleId":"68","severity":1,"message":"82","line":2,"column":46,"nodeType":"70","messageId":"71","endLine":2,"endColumn":56},{"ruleId":"68","severity":1,"message":"83","line":3,"column":7,"nodeType":"70","messageId":"71","endLine":3,"endColumn":19},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"no-unused-vars","'isAuthenticated' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'sucess' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Typography' is defined but never used.","'IconButton' is defined but never used.","'mailOnSignup' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]